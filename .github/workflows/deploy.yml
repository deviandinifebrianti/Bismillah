name: Deploy Django App (PEMKOTMALANG-SIPRETI) to Debian 11

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-20.04  # Ubuntu 20.04 support Python 3.7.8

    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: db_sipreti
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.7.8 manually
        uses: actions/setup-python@v5
        with:
          python-version: '3.7'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: debian11-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            debian11-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pymysql
          pip install -r requirements.txt

      - name: Wait for MariaDB to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
            echo "Waiting for MariaDB to be ready..."
            sleep 2
          done
          echo "MariaDB is ready!"

      - name: Run Django tests
        run: |
          python manage.py migrate --settings=pemkot.settings_test
          python manage.py test
        env:
          DEBUG: False
          DATABASE_URL: mysql://root:@127.0.0.1:3306/db_sipreti

  deploy:
    needs: test
    runs-on: ubuntu-20.04  # Ubuntu 20.04 untuk konsistensi
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Debian 11 Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/g2141720189/sipreti/lancar/pemkot

            echo "OS Version:"
            lsb_release -a || cat /etc/os-release

            echo "Creating backup..."
            mkdir -p backups
            cp -r . backups/backup-$(date +%Y%m%d-%H%M%S) || echo "Backup failed"

            echo "Pulling latest changes..."
            git pull origin main

            source .venv/bin/activate

            echo "Installing requirements..."
            python -m pip install --upgrade pip setuptools wheel
            pip install -r requirements.txt

            echo "Running migrations..."
            python manage.py migrate --noinput

            echo "Collecting static files..."
            python manage.py collectstatic --noinput

            echo "Restarting Apache..."
            sudo systemctl restart apache2

            echo "✅ Deployment complete on Debian 11"

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify Deployment Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Deployment successful to Debian 11"
          else
            echo "❌ Deployment failed! Check logs"
          fi